package Multitreading.basics_examples;
/*
● CPU (central processing unit) — центральное обрабатывающее устройство, часто
просто процессор;
● Многопоточность (Multithreading) — свойство платформы или приложения,
состоящее в том, что процесс, порождённый в операционной системе, может
состоять из нескольких потоков, выполняющихся «параллельно», то есть без
предписанного порядка во времени. При выполнении некоторых задач такое
разделение может достичь более эффективного использования ресурсов
вычислительной машины.
● Deadlock — взаимная блокировка двух потоков
Race Condition — состояние гонки, при котором потоки выполняются в неверном
порядке
● Volatile — инструкция, запрещающая копировать переменную в stack процессора
● ThreadLocal — переменная, уникальная для каждого потока
● UX (user experience) — восприятие и ответные действия пользователя,
возникающие в результате использования продукции, системы или услуги.


Статусы потоков:
● New – экземпляр потока создан, но он не запущен.
● Running — экземпляр потока запущен, процессор выделил ресурсы и
начинается его выполнение. Во время выполнения потока может перейти в
состояние Runnable, Dead или Blocked.
● Suspended — запущенный поток приостанавливает свою работу (выполнение
потока можно возобновить) - поток продолжит работать с того места, где его
он был остановлен.
● Blocked — поток ожидает высвобождения ресурсов или завершение операции
ввода-вывода. Находясь в этом состоянии поток не потребляет процессорное
время.
● Terminated — поток немедленно завершает свою работу (выполнение потока
нельзя возобновить). Поток может быть завершен, если код потока был
выполнен (т.е. поток выполнил свою задачу) или если во время выполнения
потока было выброшено необработанное исключение.
● Dead — финальное состояние жизненного цикла потока: после того, как поток
завершил свое выполнение, его состояние меняется на dead.*/
public class Basics {

}
